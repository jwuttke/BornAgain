BornAgain-0.9.9, released 2014.10.29
  > Summary: 
    1) Further GUI development: QuickSimulationView, exception catching, property limits
    2) Few bugfixes, support for multiple layout objects per layer, python script generation, minor refactoring in UserAPI.
    3) User Manual: new appendix with python examples
  > Details:
  * Bug #776: GUI: InterferenceFunction2DParaCrystal rotation angle activation
  * Bug #780: Windows: pixmap of item being dragged is not displayed on DesignerScene
  * Bug #791: LLDataTest.DataAssignment Unittest failure
  * Bug #821: Remove interference function approximations from GUI
  * Bug #826: cmake fails under Debian/testing; problem with Python
  * Bug #829: CMake is not able to find right Python version when there is a Python2 and Python3 on the system
  * Bug #833: Duplicate transformation in Real Time Activity view
  * Bug #835: In Real Time Activity view, setting wavelength to zero causes a crash
  * Bug #843: Fix nightly build (python script generation functional tests failing)
  * Feature #393: Create Mac installer
  * Feature #677: Provide validation of GUI sample for corectness and corresponding info widget
  * Feature #680: Provide ParameterizedItem's property with tooltips.
  * Feature #768: Integrate QuickSimulationView into JobView
  * Feature #769: Remove SimulationDataModel
  * Feature #778: Windows installer: implement add/remove BornAgain desktop icon
  * Feature #784: Revise workspace behaviour in DesignerScene
  * Feature #803: Implement correct handling of simulation failure in JobItem
  * Feature #805: Implement simple crash handler widget to report bugs
  * Feature #814: Implement exceptions catching in the Core to report exception from a thread to main thread
  * Feature #819: Move DA, LMA, SSCA to ParticleLayout and propagate to GUI
  * Feature #820: Implement reset of JobItem's sample and instrument models to the original.
  * Feature #822: Revise submit job logic
  * Feature #823: Allow multiple ILayout objects per layer
  * Feature #825: Update default behaviour of OutputDataWidget
  * Feature #828: Trivial form factor for demonstration purposes
  * Feature #837: Provide all item's properties with correct limits
  * Feature #838: Merge python script generation branch of Abhishek
  * Feature #845: API: remove Lattice2DIFParameters from InterferenceFunction2DLattice constructor and implement static creators for square and hexagonal lattice IF's
  * Feature #856: Modify Python Example005 Disorder2 to match description in User Manual
  * Feature #857: Include GUI into Linux 'make install' command
  * Documentation #429: Write Appendix which lists all implemented examples from Examples section
  * Documentation #846: Adapt manual to new constructor for InterferenceFunction2DLattice
  * Refactoring #786: Remove unnecessary calls to getOutCoefficients
  * Refactoring #818: Review SimulationParameters
  
BornAgain-0.9.8, released 2014.08.28
  > Summary: 
    1) Further GUI development toward first beta scheduled for October, 2014.
       Implemented rotation of particles in GUI, real time simulation window.
    2) Few bugfixes, minor refactoring in UserAPI.
  > Details:
  * Bug #741: ScalarSpecularInfoMapTest failing under Debian 32 bits
  * Bug #764: Memory leackage in mesocrystal simulation.
  * Bug #765: Genetic minimizer crashes for certain ROOT configurations
  * Bug #779: Transformations on core/shell are not being used
  * Feature #465: Organize BornAgain mail list with subscription
  * Feature #604: Implement QStandartItemModel hierarchy
  * Feature #682: Provide PlotWidget with x,y-axis in both, radians and degrees.
  * Feature #702: Implement position particle info equivalent in GUI
  * Feature #703: Implement rotation of particles in GUI
  * Feature #704: Implement Lattice2D interference function in GUI
  * Feature #736: Compile GUI under Windows with Qt5.3 and provide installer.
  * Feature #738: Perform new round of profiling and memory leackage investigation
  * Feature #746: Refactor GUI's OutputDataWidget to disantagle projections/property editor/plot widget.
  * Feature #747: Finalize QuickSimulationView.
  * Feature #748: Refactor IAxis family
  * Feature #763: Provide icon set for recent widgets
  * Feature #766: Propagate latest API changes (IAxis, IntensityDataIOFactory) into user manual.
  
BornAgain-0.9.7, released 2014.07.31
  > Summary: 
    1) Further GUI development toward first beta scheduled for October, 2014.
    2) Redesign of RT coefficient calculations to reduce numerical instabilities in very thick layers.
    3) Improvements in Monte-Carlo integration to cope with highly oscillatory form factors of super large particles.
    4) Experimental support for running BornAgain on high performance computing clusters under OpenMPI environment.
  > Details:
  * Bug #578: Initialization problem in LLData class
  * Bug #706: Layer cannot be dropped from widgetbox to designer scene
  * Bug #709: Take care of thick layers
  * Feature #523: Expose to python MSG::SetLevel
  * Feature #600: Provide compilation of BornAgain at lrz cluster
  * Feature #604: Implement QStandartItemModel hierarchy
  * Feature #663: Improve MaterialEditor logic
  * Feature #675: Provide widgetbox with tooltips.
  * Feature #679: Revise location of auto generated BAVersion and similar files
  * Feature #681: Provide Paracrystal1D with possibility to set different probability distributions.
  * Feature #687: Provide unit test machinery for GUI.
  * Feature #688: Include GUI in nightly build
  * Feature #694: Provide select all functionality for SampleView
  * Feature #695: Provide panning functionality for SampleView
  * Feature #696: Implement check for unsaved project and corresponding save/discard widget
  * Feature #699: Implement ParameterModel and corresponding view delegates for real time SimulationView
  * Feature #700: Implement core shell particles in GUI
  * Feature #701: Implement layer roughness in GUI
  * Feature #705: Implement Monte Carlo integration also for polarized simulations
  * Feature #710: Provide toy OpenMPI application to run at LRZ
  * Feature #713: Provide simplified OpenMPI support in runSimulation
  * Feature #729: Integrate Mahadi's QuickSimulation widget into run simulation evironment.
  * Documentation #691: Provide simple cartoons for concepts that are otherwise difficult to understand
  * Refactoring #581: Check naming of the coherence length
  * Testing #674: Provide functional test machinery for GUI.
    
BornAgain-0.9.6, released 2014.06.04
  > Summary: Diverse GUI items (OutputData Widget, basic simulation functionality) + big form factor issue
  * Feature #597: Attach Instrument view to session model
  * Feature #598: Implement OutputData widget
  * Feature #599: Extend OutputData widget with projections
  * Feature #603: Rafactor GUI version of MaterialManager
  * Feature #610: Generate QStandardItem objects from the domain objects
  * Feature #613: Complete correspondence between domain and GUI model objects
  * Feature #622: Implement JobQueueModel and View
  * Feature #629: Complete connection between SessionModel and JobQueueModel
  * Feature #635: Integrate Mahadi's OutputDataWidget into JobQueueView
  * Feature #646: Implement serialization of subitems of ParameterizedItem
  * Feature #647: Implement serialization of MaterialManager
  * Feature #648: Provide serialization of ParticleItem
  * Feature #653: Implement ParticleView representing ParticleItem
  * Feature #654: Complete IsGISAXS01 sample generation from GUI
  * Feature #655: Implement parameterized items for 1D and 2D paracrystals
  * Feature #657: Provide solution for form factor of big particles
  * Feature #673: Provide editing of ParameterizedItem's name in property editor.
  * Feature #678: Provide automatic switch to JobView after the job is completed.
  * Feature #684: Test remote compilation via distcc

BornAgain-0.9.5, released 2014.04.11
  > Summary: Refactoring in user API, working on GUI toward first beta.
  * Bug #605: Fitting examples under Windows doesn't update graphics in realtime
  * Feature #595: Implement saving of general GUI settings
  * Feature #596: Investigate serialization of QStandardItemModel
  * Feature #608: Basic QStandardItemModel structure
  * Feature #609: Generate domain objects from GUI model objects
  * Feature #611: Attach drag&drop view to the underlying QStandardItemModel
  * Feature #612: Attach Property Editor View to the underlying QStandardItemModel
  * Feature #615: Implement add/remove/move in TreeView
  * Feature #616: Implement new FormFactor pictograms in widgetbox
  * Feature #623: Implement basics of JobQueueItem and JobQueueModel
  * Feature #624: Implement JobQueueView with tree representation of queue's properties and corresponding OutputData widget
  * Feature #625: Implement basic logic for add/remove/cancel/unddo for JobQueueView
  * Feature #626: Implement ProgressBar in Coregui and JobQueueModel
  * Feature #627: Implement serialization of JobQueueModel
  * Feature #628: Implement call back from Simulation to the ProgressBar of JobQueueView
  * Feature #641: Drag items to root in treeview
  * Feature #642: Implement normalization of IntensityData in Python
  * Feature #645: Implement formfactory property as combobox in property editor
  * Documentation #584: Write small explanation about core shell form factor in FormFactor's Appendix
  * Documentation #589: Reduce size in Mb of user manual
  * Documentation #590: Write Appendix section about interference functions available
  * Documentation #591: Write Doxygen section about interference functions available
  * Refactoring #266: Refactor MaterialManager
  * Refactoring #594: Revise ParticleDecoration appearance/naming in UserAPI

BornAgain-0.9.4, released 2014.02.07
  > Summary: Off specular simulation, beam divergence, support for MacOS Maverick, new form factors
  * Bug #220: Gui: provide GUI compilation under Qt5/linux
  * Bug #461: Provide compilation on latest MacOS Maverick
  * Bug #545: PolarizedDWBAZeroMag functional test fails under windows
  * Bug #567: Restore PythonAPI generation under Maverick
  * Bug #576: Fix functional tests under Maverick
  * Bug #582: Silent sigmentation fault in InterferenceFunction2DLattice
  * Feature #304: Provide compilation of HipGISAXS and run test simulation on GPU
  * Feature #318: Implement beam divergence and wavelength distribution
  * Feature #400: Move QtVariantManager into directory "externals" as static library
  * Feature #446: Repair broken Genetic minimizer after we get rid from ROOT dependency
  * Feature #482: Implement/review Full spheroid formfactor
  * Feature #484: Implement/review Ellipsoid formfactor
  * Feature #485: Implement/review Anisotropic hemi-spheroid formfactor
  * Feature #486: Implement/review Spheroid formfactor
  * Feature #491: Provide https access to git repository
  * Feature #521: Implement polarized DWBA with cylindrical particles functional test
  * Feature #526: Implement the ripple 1 (gaussian) formfactor
  * Feature #543: Review release script
  * Feature #553: Provide interface to perform off-specular scattering simulations
  * Feature #569: Provide complex Bessel functions in C++ by wrapping existing fortran code
  * Feature #571: Replace real Bessel with complex one where needed
  * Documentation #546: Complete Appendix with all form factors listed
  * Documentation #549: Doxygen API: review form factors description
  * Documentation #565: Provide simulation and fit examples for spheres with size distribution
  * Documentation #566: Provide ripple2 example
  * Testing #445: Implement BornAgainFit unit test infrastructure
  * Testing #537: Create MultiLayer unit test
  * Testing #551: Implement tests for AttLimits, FitParameter, FitParameterLinked
  * Testing #554: Implement ParticleDecoration unit test
  * Testing #556: Implement HomogeneousMaterial and HomogeneousMagneticMaterials unit tests
  * Testing #557: Implement OutputData<Eigen::Matrix2d> unit test
  * Testing #559: Implement SpecularMatrix unit test
  * Testing #560: Implement ScalarRTCoefficients unit test
  * Testing #561: Implement MathFunctions unit test
  * Testing #562: Implement MatrixRTCoefficients unit test
  * Testing #563: Revise Beam unit test
  * Testing #564: Implement ScalarSpecularInfoMap and MatrixSpecularInfoMap test
  * Testing #573: Implement DWBASimulation unit test

BornAgain-0.9.3, released 2013.12.20
  > Summary: new form factors, user requests, refactoring
  * Bug #469: Review form factor calculation for big particle dimensions
  * Bug #499: Simulated formfactors sphere (for H=2R) and fullsphere are squeezed
  * Bug #505: Investigate and possibly fix transformations for polarized mesocrystals
  * Bug #508: Pacman assymetry in peaks of meso crystal simulation
  * Bug #509: OutputData<T>.setAllTo(value) crashes (nullpointer) after clear()
  * Bug #512: Particles' magnetic materials are not transformed
  * Bug #516: Simulation of mesocrystal differs when doing 4 vs 8 threads
  * Feature #288: Provide correct implementation of tilted cylinder (and cone) formfactor for complex wavenumbers
  * Feature #410: Review and improve on mesocrystal form factors
  * Feature #430: Examples: prepare example with core shell nanoparticles
  * Feature #435: Request: provide JFM with the python script simulating the sample_jfm1
  * Feature #454: Change behavior of setParameterValue
  * Feature #477: Implement/review Cone formfactor
  * Feature #478: Implement/review Tethraedron formfactor
  * Feature #479: Implement/review Prism6 formfactor
  * Feature #480: Implement/review Cone6 formfactor
  * Feature #481: Implement/review Cybooctaedron formfactor
  * Feature #483: Implement/review Anisotropic pyramid formfactor
  * Feature #494: Implement all IsGISAXS distribution functions
  * Feature #506: Refactor all tests to use new SimulationRegistry
  * Feature #527: Implement the ripple 2 (triangular) formfactor
  * Feature #540: Provide consistent propagation and composition of transformations
  * Documentation #426: Examples: prepare C++ standalone example in Examples section
  * Documentation #432: Examples: prepare example with correlated roughness interface
  * Documentation #471: Write down formalism for polarized DWBA on embedded particles
  * Documentation #475: Create prototype of latex (pdf) page representing form factor
  * Documentation #489: Python docstrings
  * Documentation #501: API reference for manual
  * Refactoring #232: rename "min" and "max" in TRange, ...
  * Refactoring #302: Return global static constants in the namespace back
  * Refactoring #303: Drop shared_ptr usage for BasicVector3D
  * Refactoring #416: CHeck and fix //TODO's and //FIXME's
  * Refactoring #436: Refactor ISample, IParameterized and ParameterPool for better access to global ISample's parameter pool
  * Refactoring #507: Wrap SampleBuilder in the shared pointer
  * Refactoring #522: Clean up in App and FunctionalTests
  * Testing #127: Add LLData Unit tests
  * Testing #413: Repair MesoCrystal functional test
  * Testing #414: Implement functional test: polarized DWBA with zero magnetic field
  * Testing #421: Repair Performance test
  * Testing #524: Produce a functional test for the layer with roughness
  * Testing #529: Create TRange unit test
  * Testing #530: Create AxisBin unit test
  * Testing #535: Modify Particle unit test
  * Testing #536: Create FTDistributions unit test
  * Support #511: Provide example with 2 parameter fit of spheres in a hex lattice

BornAgain-0.9.2, released 2013.10.14
  > Summary: build issues, fitting interface, user manual, conferences
  * Bug #447: Our minimum required cmake version 2.8.0 doesn't contain PARSE_MACRO
  * Bug #462: Provide compilation on Jülich MacOS server
  * Bug #463: Provide compilation under Jülich CentOS 5.10
  * Bug #468: Make use of python interpreter to guess libpython location
  * Bug #470: fitting example failure
  * Bug #473: Simulation fails at zero abundance in particle_decoration.addParticle
  * Bug #497: Access to axis of IntensityData in Python leads to the segmentation fault
  * Feature #396: Create deb package
  * Feature #417: implement automatic propagation of BornAgain version number into cmake
  * Feature #419: Write deployment script which will automatize the release
  * Feature #431: Build: provide thisbornagain.sh to set system PATHs to the installation directory
  * Feature #437: Provide OutputData with ExportToNumpy function for PythonAPI
  * Feature #438: Adjust existing python examples to conform PEP8 style
  * Feature #444: Prepare talk for ILL
  * Feature #450: Provide python function to retrieve polarized output data
  * Feature #493: Set PYTHONPATH under windows at the end of installation
  * Documentation #372: Review fitting section
  * Documentation #398: default installation from tgz; direct only experts to git snapshot
  * Documentation #404: Prepare poster for GISAXS2013 Workshop in Hamburg
  * Documentation #423: Prepare demo for GISASXS 2013
  * Documentation #439: Explain sample parameters paradigm in simulation examples section
  * Documentation #440: Create svg plot representing minimization flow
  * Documentation #441: Prepare talk for Koordinierungstreffen
  * Documentation #448: Examples: prepare FitCylindersAndPrism_detailed example
  * Documentation #449: Review manual's simulation python example section to conform changes in the script itself
  * Documentation #455: Add demos into Examples/python section
  * Documentation #456: Prepare talk "Data Analysis in HEP" for ILL
  * Documentation #458: Prepare talk about Python bindings for ILL
  * Documentation #459: Review installation section
  * Refactoring #443: Refactor IMinimizer for better control of minimizer option
  * Support #460: Create git repository for user related info

BornAgain-0.9.1, released 2013.09.27
  > Summary: Windows build, polarized neutrons and magnetic domains
  * Bug #403: Debian unittest failure
  * Feature #14: Choose platform-independent build system
  * Feature #314: Windows compilation part 2
  * Feature #360: Compile BornAgainCore and corresponding functional tests
  * Feature #361: Compile BornAgainFit and corresponding minimizer libraries and functional tests
  * Feature #362: Compile PythonAPI and run python functional tests
  * Feature #363: Compile App using cmake-mingw and cmake-msvc
  * Feature #364: Switch to cmake build system in windows build
  * Feature #365: Switch to Microsoft VC2012 in windows build
  * Feature #366: Create windows installer package
  * Feature #367: Provide treatment of detector resolution for polarized neutrons
  * Feature #368: Provide correct normalization of polarized neutron intensity
  * Feature #388: Test polarization simulation with IsGISAXS03 example
  * Feature #389: Make common interface for reflection/transmission coefficients and their maps
  * Feature #390: Make implementations of interference functions transparent to whether coefficients are matrix- or scalar-valued
  * Feature #391: Compile GUI for windows using cmake-mingw and cmake-msvc
  * Feature #392: Use scalar reflection/transmission coefficients in absence of magnetization in layers (also when the particles might be magnetized)
  * Feature #399: Provide diffuse calculation for polarized mesocrystals
  * Feature #402: Use cmake in eclipse build
  * Feature #411: Provide help functions for analysis of polarized OutputData structures
  * Documentation #406: Review Software Architecture section
  * Documentation #407: Review Installation section
  * Documentation #408: Update wiki page to conform with the UserManual
  * Refactoring #370: Remove unnecessary code duplication introduced during implementation of polarization
  * Support #371: Simulate S. Disch's sample    

BornAgain-0.9, released 2013.08.23
  * FunctionalTests: fitting from python works two times faster than fitting from C++
  * Compile Error on Ubuntu 12.04
  * Strange warning in boost::python api generation
  * crash on addInterferenceFunction() without any error message
  * Fix zero eigenvalue case for specular magnetic case
  * Move ROOT minimization into ThirdParty and so get rid from ROOT dependency
  * Change conventions (feedback from GISS Workshop)
  * Ease installation for users
  * Implement batch mode for the Simulation (suggestion of Gunthard Benecke)
  * Develop enough neutron polarization support to simulate samples from S. Disch and A. Klapper
  * Remove Decorator pattern from user interface
  * Move specular calculation to the SpecularMatrix class (for scalar)
  * Add polarization state to Beam
  * Add magnetic materials
  * Develop MatrixSpecular for magnetic materials
  * Use magnetic calculation when a magnetic material is present
  * Add DWBA for magnetic particles
  * Develop roughness calculation for matrix formalism
  * Add new cmake build configuration to TeamCity
  * Write description of isgisaxs01 example for User Manual using latex
  * Populate examples directory with several well commented python scripts
  * Write how to install in manual and wiki
  * Adapt local python script for plotting data
  * Write simple fitting example and corresponding section in the documentation
  * Provide import of ProgramOptions (nthreads, level of logging) into libBornAgainCore
  * Replace Particle's index of refraction with material
  * Move all IsGISAXS geometries to Core/StandardSample directory
  * cmake build in Ubuntu and corresponding how to in the documentation

BornAgain-0.8.2, released 2013.07.30
  * Particle interface changed to accept HomogeneousMaterial

BornAgain-0.8.1, released 2013.07.26
  * CMake based build system
  * PythonAPI automatic code generation redesign
  * User Manual v0.1
  * libBornAgainFit
  * FunctionalTest collection

BornAgain-0.7.0, released 2013.04.10
  * First public release
